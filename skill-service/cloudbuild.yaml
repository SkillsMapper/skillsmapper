#source:
#  repo_source:
#    project_id: $PROJECT_ID
#    repo_name: github_skillsmapper_skillsmapper
#    dir: skill-service
#    branch_name: main
steps:
  #  - id: eclint
  #    name: "e53e225/editorconfig-checker"
  - id: go_version
    name: "gcr.io/cloud-builders/go:1.20"
    args: [ "version" ]
    env: [ "GOPATH=." ]
  - id: go_mod_download
    name: "gcr.io/cloud-builders/go:1.20"
    entrypoint: 'go'
    args: [ 'mod', 'download' ]
  - id: go_get
    name: "gcr.io/cloud-builders/go:1.20"
    entrypoint: 'go'
    args: [ 'get', './...' ]
  #- id: go_linter
  #  name: "golangci/golangci-lint"
  #  args: [ "golangci-lint","run", "-v", "--timeout=180s" ]
  - id: go_test_alt
    name: golang:1.20
    entrypoint: /bin/bash
    args:
      - -c
      - |
        go install github.com/jstemmer/go-junit-report/v2@latest
        2>&1 go test -timeout 1m -v ./... | /go/bin/go-junit-report -set-exit-code -iocopy -out ${SHORT_SHA}_test_log.xml
#  - id: go_test
#    name: "gcr.io/cloud-builders/go:1.20"
#    args: [ 'test', '-v', './...' ]
#    env: [ "GOPATH=." ]
  - id: go_security
    name: "securego/gosec"
    args: [ "./..." ]
    env: [ "GOPATH=." ]
  - id: pack
    name: gcr.io/k8s-skaffold/pack
    entrypoint: pack
    args:
      - build
      - gcr.io/$PROJECT_ID/skill-service
      - --network
      - cloudbuild
      - --builder
      - gcr.io/buildpacks/builder
images:
  - 'gcr.io/$PROJECT_ID/skill-service:$COMMIT_SHA'

